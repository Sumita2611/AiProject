{"title": "Minimum Cost to Paint a Striped Fence", "difficulty": "Easy", "description": "You are painting a fence of N sections.  Each section can be painted one of three colors: Red (R), Green (G), or Blue (B).  You are given an array `costs` where `costs[i]` is a list of three integers representing the cost to paint section `i` with Red, Green, and Blue respectively.  However, you are only allowed to use at most one consecutive section with the same color.  Find the minimum total cost to paint the entire fence.", "examples": [{"input": "`costs = [[1,2,3],[4,5,6],[7,8,9]]`", "output": "14", "explanation": "Paint section 1 Red (cost 1), section 2 Green (cost 5), section 3 Blue (cost 9). Total cost: 1 + 5 + 9 = 15.  However, a better solution is: Red (1), Green (5), Blue (7) which equals 13, or Red(1), Blue(6), Green(8) which equals 15. Another solution is R(1), B(6), R(7) which is 14. This is the minimum."}, {"input": "`costs = [[10,11,1],[1,2,3],[4,5,6]]`", "output": "7", "explanation": "Paint section 1 Blue (cost 1), section 2 Red (cost 1), section 3 Green (cost 5). Total cost: 1 + 1 + 5 = 7\n\n\nConstraints:\n- 1 <= N <= 100\n- `costs` is a list of lists, where each inner list has length 3 and contains positive integers.\n- Time complexity: O(N)\n- Space complexity: O(N)"}], "constraints": ["- 1 <= N <= 100", "- `costs` is a list of lists, where each inner list has length 3 and contains positive integers.", "- Time complexity: O(N)", "- Space complexity: O(N)"], "function_signature": {"java": "public int minCost(int[][] costs) { // Your code here }", "cpp": "int minCost(const vector<vector<int>>& costs) { // Your code here }", "python": "def min_cost(costs): # Your code here\n    pass"}, "id": "f21ce3b7a88380c10817fe6f6f55b922", "category": "dynamic programming"}